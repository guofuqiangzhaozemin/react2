{"version":3,"sources":["todolist/List.js","todolist/Input.js","todolist/TodoList.js","index.js"],"names":["List","arr1","this","props","todos","filter","item","done","arr2","length","renderTodos","Component","Input","htmlFor","id","ref","inp","input","value","inpValue","type","onChange","handleChange","onClick","addTodo","TodoList","e","setState","target","state","title","alert","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"6KAEqBA,E,uKAEb,IAAIC,EAAKC,KAAKC,MAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAEA,EAAKC,QACxCC,EAAKN,KAAKC,MAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAGA,EAAKC,QAC7C,OACI,6BACI,uDAASC,EAAKC,QAEd,4BACKP,KAAKC,MAAMO,aAAY,IAE5B,uDAAST,EAAKQ,QACd,4BACKP,KAAKC,MAAMO,aAAY,S,GAbVC,aCAbC,E,uKACP,IAAD,OACL,OACI,6BACI,2BAAOC,QAAQ,IAAf,YACA,2BACAC,GAAG,MACHC,IAAO,SAAAC,GAAG,OAAE,EAAKC,MAAMD,GACvBE,MAAOhB,KAAKC,MAAMgB,SAClBC,KAAK,OACLC,SACInB,KAAKC,MAAMmB,eAGf,4BACAC,QAASrB,KAAKC,MAAMqB,SADpB,qB,GAdmBb,aC0FpBc,E,kDAxFX,aAAc,IAAD,8BACT,gBAMJH,aAAa,SAACI,GACV,EAAKC,SAAS,CAACR,SAASO,EAAEE,OAAOV,SARxB,EAqBbM,QAAQ,WACoB,IAArB,EAAKK,MAAMV,UAId,EAAKQ,SAAS,CACVvB,MAAM,CACF,CACI0B,MAAO,EAAKD,MAAMV,SAClBZ,MAAK,IAHR,mBAKE,EAAKsB,MAAMzB,UAGtB,EAAKuB,SAAS,CAACR,SAAS,MAZpBY,MAAM,+CAvBD,EAqCbC,QAAQ,SAACC,GACL,EAAKN,SAAS,CACVvB,MAAM,EAAKyB,MAAMzB,MAAMC,QAAO,SAACC,EAAK4B,GAAN,OAAcA,GAAOD,QAvC9C,EA0CbE,OAAO,SAACD,GACJ,IAAIE,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKV,MAAMzB,QAClDgC,EAASF,GAAO3B,MAAM6B,EAASF,GAAO3B,KACtC,EAAKoB,SAAS,CACVvB,MAAMgC,KA9CD,EAiDb1B,YAAY,SAACH,GACV,OAAO,EAAKsB,MAAMzB,MAAMoC,KAAI,SAACC,EAAKR,GAC7B,GAAG1B,GAAMkC,EAAKlC,KACV,OAAO,4BACP,2BACIgB,QAAS,kBAAI,EAAKY,OAAOF,IACzBS,QAASnC,EACTa,KAAK,aAET,0BAAMuB,wBAAyB,CAACC,OAAOH,EAAKX,SAC5C,4BACIP,QACI,kBAAI,EAAKS,QAAQC,KAFzB,qBAzDR,EAAKJ,MAAM,CACPV,SAAS,GACTf,MAAM,IAJD,E,gEAWT,IAAIA,EAAQyC,aAAaC,QAAQ,SAC9B1C,GACCF,KAAKyB,SAAS,CACVvB,MAAMiC,KAAKC,MAAMlC,O,2CAKzByC,aAAaE,QAAQ,QAAQV,KAAKE,UAAUrC,KAAK2B,MAAMzB,U,+BAkDjD,IAAD,EACkBF,KAAK2B,MAAfV,GADR,EACEf,MADF,EACQe,UAEb,OACI,yBAAK6B,UAAU,OACX,kBAAC,EAAD,CACI7B,SAAYA,EACZG,aAAgBpB,KAAKoB,aACrBE,QAAWtB,KAAKsB,UAEpB,kBAAC,EAAD,CACId,YAAeR,KAAKQ,YACpBN,MAASF,KAAK2B,MAAMzB,a,GAlFjBO,aCCvBsC,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.aba46007.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class List extends Component {\r\n    render() {\r\n        let arr1=this.props.todos.filter(item=>item.done);\r\n        let arr2=this.props.todos.filter(item=>!item.done);\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr2.length}</h2>\r\n               \r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已完成的{arr1.length}</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=''>todoList</label>\r\n                <input \r\n                id='inp'\r\n                ref = {inp=>this.input=inp}\r\n                value={this.props.inpValue}\r\n                type=\"text\"\r\n                onChange={\r\n                    this.props.handleChange\r\n                }\r\n                />\r\n                <button\r\n                onClick={this.props.addTodo}\r\n                >添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport List from './List'\r\nimport Input from './Input'\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            alert('请输入有效字段')\r\n            return;\r\n        }\r\n        this.setState({           \r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue, \r\n                    done:false,\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo=(idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        })\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done=!newTodos[index].done\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos=(done)=>{\r\n       return this.state.todos.map((todo,idx)=>{                            \r\n            if(done==todo.done){\r\n                return <li>\r\n                <input \r\n                    onClick={()=>this.toggle(idx)}\r\n                    checked={done} \r\n                    type='checkbox'\r\n                />\r\n                <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                <button\r\n                    onClick={\r\n                        ()=>this.delTodo(idx)\r\n                    } \r\n                >删除</button>\r\n            </li>\r\n            }                          \r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {todos,inpValue}=this.state;\r\n            \r\n        return (\r\n            <div className='box'>\r\n                <Input\r\n                    inpValue = {inpValue}\r\n                    handleChange = {this.handleChange}\r\n                    addTodo = {this.addTodo}\r\n                />\r\n                <List\r\n                    renderTodos = {this.renderTodos}\r\n                    todos = {this.state.todos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoList from './todolist/TodoList';\r\n\r\nReactDOM.render(\r\n    \r\n  <TodoList/>,\r\n  \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}